#!/bin/sh

# Verify we have internet connectivity
max_retries=${MAX_RETRIES:-5}
retry_delay=${RETRY_DELAY:-5}
i=1

# Set default values
ADVERTISE_EXIT_NODE=${ADVERTISE_EXIT_NODE:-"false"}
ADVERTISE_CONNECTOR=${ADVERTISE_CONNECTOR:-"false"}
ACCEPT_DNS=${ACCEPT_DNS:-"true"}
ACCEPT_ROUTES=${ACCEPT_ROUTES:-"false"}
AUTH_KEY=${AUTH_KEY:-"default-auth-key"}
ADVERTISE_ROUTES=${ADVERTISE_ROUTES:-""}
HOSTNAME=${HOSTNAME:-"pulumi"}
EXIT_NODE=${EXIT_NODE:-""}
EXIT_NODE_ALLOW_LAN_ACCESS=${EXIT_NODE_ALLOW_LAN_ACCESS:-false}
JSON=${JSON:-false}
LOGIN_SERVER=${LOGIN_SERVER:-"https://controlplane.tailscale.com"}
RESET=${RESET:-false}
SHIELDS_UP=${SHIELDS_UP:-false}
TAILSCALE_SSH=${TAILSCALE_SSH:-false}
SNAT_SUBNET_ROUTES=${SNAT_SUBNET_ROUTES:-true}
NETFILTER_MODE=${NETFILTER_MODE:-"on"}
STATEFUL_FILTERING=${STATEFUL_FILTERING:-false}
TIMEOUT=${TIMEOUT:-"30s"}
FORCE_REAUTH=${FORCE_REAUTH:-false}

while [ $i -le $max_retries ]
do
  sudo systemctl enable --now tailscaled
  
  # Construct the tailscale up command based on the presence of advertise_tags variable
  tailscale_cmd="tailscale up --advertise-exit-node=\"${ADVERTISE_EXIT_NODE}\" \
    --advertise-connector=\"${ADVERTISE_CONNECTOR}\" \
    --accept-dns=\"${ACCEPT_DNS}\" \
    --accept-routes=\"${ACCEPT_ROUTES}\" \
    --authkey \"${AUTH_KEY}\" \
    --advertise-routes=\"${ADVERTISE_ROUTES}\" \
    --snat-subnet-routes=false \
    --hostname=\"${HOSTNAME}\" \
    --exit-node=\"${EXIT_NODE}\" \
    --exit-node-allow-lan-access=\"${EXIT_NODE_ALLOW_LAN_ACCESS}\" \
    --json=\"${JSON}\" \
    --login-server=\"${LOGIN_SERVER}\" \
    --reset=\"${RESET}\" \
    --shields-up=\"${SHIELDS_UP}\" \
    --ssh=\"${TAILSCALE_SSH}\" \
    --snat-subnet-routes=\"${SNAT_SUBNET_ROUTES}\" \
    --netfilter-mode=\"${NETFILTER_MODE}\" \
    --stateful-filtering=\"${STATEFUL_FILTERING}\" \
    --timeout=\"${TIMEOUT}\" \
    --force-reauth=\"${FORCE_REAUTH}\""
  
  if [ -n "${ADVERTISE_TAGS}" ]; then
    tailscale_cmd="$tailscale_cmd --advertise-tags=\"${ADVERTISE_TAGS}\""
  fi
  
  if [ -n "${HOSTNAME}" ]; then
    tailscale_cmd="$tailscale_cmd --hostname=\"${HOSTNAME}\""
  fi
  
  if [ -n "${OPERATOR}" ]; then
    tailscale_cmd="$tailscale_cmd --operator=\"${OPERATOR}\""
  fi

  if [ -z "${AUTH_KEY}" ]; then
    echo "Error: AUTH_KEY is required but not set. Exiting."
    exit 1
  fi
  
  # Execute the tailscale up command
  eval "$tailscale_cmd"
  
  # Check the exit status of the previous command
  if [ $? -eq 0 ]; then
    echo "Tailscale installation and configuration succeeded"
    exit 0
  else
    echo "Tailscale installation and configuration failed. Retry attempt $i"
    sleep $retry_delay
  fi
  
  i=$((i + 1))
done